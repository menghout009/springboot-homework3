pipeline {
    agent any

    environment {
        SONARQUBE_HOME = tool 'SonarQubeScanner'
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // Adjust the build command according to your project
                sh './mvnw clean package'
            }
        }

        stage('SonarQube Scan') {
            steps {
                script {
                    def scannerHome = tool 'SonarQubeScanner'

                    withSonarQubeEnv(installationName: 'SonarQube') {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                // Clean up workspace or do any other post-processing
            }
        }
    }
}