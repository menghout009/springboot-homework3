pipeline {
    agent any

    options {
        // Use a log rotator to keep a history of the last 5 builds
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }

    environment {
        // Define the SonarQube installation name
        SONARQUBE_INSTALLATION = 'sq1'
    }

    stages {
        stage('Initialize') {
            steps {
                script {
                    // Print information about the environment
                    echo "Running on ${env.NODE_NAME} (${env.JENKINS_URL})"
                    echo "Building on workspace ${env.WORKSPACE}"
                }
            }
        }

        stage('Checkout') {
            steps {
                // Check out the source code
                checkout scm
            }
        }

        stage('Build and Scan') {
            steps {
                // Use SonarQube scanner with Maven
                withSonarQubeEnv(installationName: SONARQUBE_INSTALLATION) {
                    // Run Maven build and SonarQube scan
                    sh './mvnw clean org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.0.2155:sonar'
                }
            }
        }
    }

    post {
        always {
            // Cleanup steps or post-processing tasks can be added here
            echo "Pipeline completed on ${env.NODE_NAME}"
        }
        success {
            // Actions to be taken if the pipeline is successful
            echo "Build and SonarQube scan succeeded!"
        }
        failure {
            // Actions to be taken if the pipeline fails
            echo "Build or SonarQube scan failed. Check the logs for details."
        }
    }
}